{
  "workflow": {
    "name": "Atomic Video: object_detection",
    "description": "Atomic video workflow using composable nodes for object_detection",
    "version": "1.0",
    "generated_by": "WorkflowComposer (Atomic Mode)",
    "generated_at": "2025-10-29T16:02:08.965196",
    "goal": {
      "task": "object_detection",
      "input_type": "videos/sample.mp4",
      "output_type": "display",
      "performance_target": 20.0,
      "hardware_preference": "auto",
      "quality_over_speed": true
    },
    "strategy": "fast_pipeline",
    "optimized_parameters": {
      "conf_threshold": 0.25,
      "iou_threshold": 0.7,
      "batch_size": 1
    }
  },
  "nodes": [
    {
      "id": "detect_hardware",
      "function": "workflow_nodes.infrastructure.detect_gpus.detect_gpus_node",
      "inputs": {}
    },
    {
      "id": "download_model",
      "function": "workflow_nodes.infrastructure.download_model.download_model_node",
      "depends_on": [],
      "inputs": {
        "model_name": "yolov8s",
        "target_format": "onnx"
      }
    },
    {
      "id": "video_capture",
      "function": "workflow_nodes.atomic.video_ops.open_video_capture_node",
      "inputs": {
        "source": "videos/sample.mp4"
      },
      "dependencies": []
    },
    {
      "id": "create_session",
      "function": "workflow_nodes.atomic.onnx_ops.create_onnx_directml_session_node",
      "inputs": {
        "model_path": "models/yolov8s.onnx",
        "device_id": 0
      },
      "dependencies": [
        "download_model",
        "detect_hardware"
      ]
    },
    {
      "id": "video_loop",
      "function": "workflow_nodes.video.granular_video_loop.granular_video_loop_node",
      "inputs": {
        "conf_threshold": 0.3,
        "iou_threshold": 0.7,
        "display_fps": true,
        "save_video": false,
        "output_path": null,
        "max_duration": 0
      },
      "dependencies": [
        "video_capture",
        "create_session",
        "download_model"
      ]
    },
    {
      "id": "performance_stats",
      "function": "workflow_nodes.utils.performance_stats.performance_stats_node",
      "depends_on": [
        "video_loop"
      ],
      "inputs": {
        "video_result": "$video_loop"
      }
    }
  ]
}